.panel.panel-default
  .panel-heading.text-center
    - path = nil
    - if current_user.admin?
      - path = validations_path
    - else
      - path = :back
    = link_to path do
      %span.glyphicon.glyphicon-chevron-left
        Retour vers la page précédente
  .panel-body
    .panel.panel-default
      .panel-heading
        .text-heading.text-center
          %a{"data-parent" => "#main", "data-toggle" => "collapse", :href => "#status"}
            .row
              .col-md-4
                Crédits:
                .badge
                  = @student_program.count_credits
              .col-md-4
                Minimum:
                .label.label-success 
                  = @student_program.program.min
              .col-md-4
                Maximum:
                .label.label-danger
                  = @student_program.program.max
      #status.panel-collapse.collapse.in
        .panel-body
          - percentages = @student_program.credits_percentages

          = render 'status_messages', percentages: percentages
          
          .progress
            .progress-bar.progress-bar-success{"aria-valuemax" => @program.min, "aria-valuemin" => "0", "aria-valuenow" => @student_program.count_credits, :role => "progressbar", :style => "width:"+percentages[:min].to_s+"%;"}
              = @student_program.count_credits
              \/
              = @student_program.program.min.to_s
              crédits
            .progress-bar.progress-bar-warning{"aria-valuemax" => @program.max, "aria-valuemin" => "0", "aria-valuenow" => @student_program.count_credits, :role => "progressbar", :style => "width:"+percentages[:max].to_s+"%;"}

            .progress-bar.progress-bar-danger{"aria-valuemax" => @program.max+@program.min, "aria-valuemin" => "0", "aria-valuenow" => @student_program.count_credits, :role => "progressbar", :style => "width:"+percentages[:overflow].to_s+"%;"}

.panel.panel-default
  .panel-heading.text-center
    Vous avez
    = @justification.constraint_exceptions.count
    contrainte(s) non respectée(s)
  .panel-body
    .form
      = form_for @justification do |ff|
        = ff.hidden_field :read
        = render 'student_programs/check/constraints_header',  id: "mandatory", name: "Cours obligatoires manquants", exceptions: @justification.constraint_exceptions.mandatory, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header', id: "pre", name: "Prérequis manquants", exceptions: @justification.constraint_exceptions.prerequisite, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header',  id: "co", name: "Corequis manquants", exceptions: @justification.constraint_exceptions.corequisite, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header',  id: "or_co", name: "Corequis disjonctifs (OR)",exceptions: @justification.constraint_exceptions.or_corequisite, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header',  id: "or_pre", name: "Prerequis disjonctifs (OR)", exceptions: @justification.constraint_exceptions.or_prerequisite, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header',  id: 'xor_co', name: "Corequis disjonctifs exclusifs (XOR)", exceptions: @justification.constraint_exceptions.xor_corequisite, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header', id: "xor_pre", exceptions: @justification.constraint_exceptions.xor_prerequisite, name: "Prerequis disjonctif exclusifs (XOR)", student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header', name: "Minimum de crédits non atteints", id: "min", exceptions: @justification.constraint_exceptions.min, student_program: @student_program, f: ff
        = render 'student_programs/check/constraints_header',  name: "Maximum de crédits dépassés", exceptions: @justification.constraint_exceptions.max, id: "max", student_program: @student_program, f: ff
        = ff.submit "Compléter la justification", class: "btn btn-lg btn-danger btn-block"